https://leetcode.com/problems/find-right-interval/solutions/7150313/lower-bound-binary-search-by-shubham_sk7-u4od/

class Solution {
public:
    vector<int> findRightInterval(vector<vector<int>>& intervals) 
    {
        int n=intervals.size();
        vector<pair<int,int>> start;
        for(int i=0;i<n;i++)
        {
            start.push_back({intervals[i][0],i});
        }
        sort(start.begin(),start.end());
        vector<int> ans(n);
        for(int i=0;i<n;i++)
        {
            int l=0,r=n-1;
            int num=intervals[i][1];
            int res=-1;
            while(l<=r)
            {
                int mid=(l+r)/2;
                
                if(num<=start[mid].first)
                {
                    res=start[mid].second;
                    r=mid-1;
                }
                else
                {
                    l=mid+1;
                }
            }
            ans[i]=res;
        }
        return ans;
        
    }
};
